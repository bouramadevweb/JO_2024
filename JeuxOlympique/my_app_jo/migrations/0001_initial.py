# Generated by Django 5.0.3 on 2024-03-28 21:06

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Competitions',
            fields=[
                ('pk_typ_competition', models.CharField(max_length=1000, primary_key=True, serialize=False)),
                ('Nom', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='Dates_commandes',
            fields=[
                ('pk_date', models.DateTimeField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Dates_Competions',
            fields=[
                ('pk_date_competition', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('date_debut', models.DateTimeField()),
                ('date_fin', models.DateTimeField()),
                ('Remises_de_medailles', models.CharField(default='', max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='Lieu_des_competions',
            fields=[
                ('pk_lieu', models.CharField(max_length=250, primary_key=True, serialize=False)),
                ('Nom', models.CharField(max_length=250)),
                ('Ville', models.CharField(max_length=50)),
                ('Capacite', models.BigIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='List_competition',
            fields=[
                ('pk_list_competition', models.CharField(max_length=150, primary_key=True, serialize=False)),
                ('nom', models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='ODS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discipline', models.CharField(max_length=250)),
                ('date_debut', models.DateField()),
                ('date_fin', models.DateField()),
                ('lieu', models.CharField(max_length=250)),
                ('ville', models.CharField(max_length=250)),
                ('capacite', models.TextField()),
                ('remises_de_medailles', models.CharField(blank=True, max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('Nom', models.CharField(max_length=150)),
                ('Prenom', models.CharField(max_length=150)),
                ('ClefGeneree', models.CharField(default='9f50059218840d3651aacfca259b24e1', max_length=50)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'auth_user',
                'permissions': (('create_users', 'Can create users'),),
                'abstract': False,
                'swappable': 'AUTH_USER_MODEL',
                'default_permissions': (),
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Billet',
            fields=[
                ('pk_Billet', models.AutoField(primary_key=True, serialize=False)),
                ('Cledebilletelectroniquesecurisee', models.CharField(max_length=50, unique=True)),
                ('ClefUtilisateur', models.CharField(max_length=50)),
                ('est_validee', models.BooleanField(default=False)),
                ('pk_typ_competition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_app_jo.competitions')),
            ],
        ),
        migrations.AddField(
            model_name='competitions',
            name='pk_date_competition',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_app_jo.dates_competions'),
        ),
        migrations.AddField(
            model_name='dates_competions',
            name='pk_lieu',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_app_jo.lieu_des_competions'),
        ),
        migrations.AddField(
            model_name='competitions',
            name='pk_lieu',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_app_jo.lieu_des_competions'),
        ),
        migrations.AddField(
            model_name='lieu_des_competions',
            name='Discipline',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_app_jo.list_competition'),
        ),
        migrations.AddField(
            model_name='dates_competions',
            name='pk_list_competition',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_app_jo.list_competition'),
        ),
        migrations.AddField(
            model_name='competitions',
            name='pk_list_competition',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_app_jo.list_competition'),
        ),
        migrations.CreateModel(
            name='Offre',
            fields=[
                ('pk_Offre', models.CharField(max_length=2000, primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('One', 'One'), ('Duo', 'Duo'), ('Famille', 'Famille')], max_length=10)),
                ('nombre_personnes', models.IntegerField()),
                ('prix', models.FloatField()),
                ('competition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_app_jo.competitions')),
            ],
        ),
        migrations.CreateModel(
            name='Commande',
            fields=[
                ('pk_Commande', models.AutoField(primary_key=True, serialize=False)),
                ('quantite', models.IntegerField()),
                ('MontantTotal', models.FloatField()),
                ('pk_date', models.DateTimeField(auto_now_add=True)),
                ('est_validee', models.BooleanField(default=False)),
                ('pk_Billet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_app_jo.billet')),
                ('pk_Utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('pk_Offre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_app_jo.offre')),
            ],
        ),
    ]
